[
    [{
        "issues": [{
            "swcID": "SWC-107",
            "swcTitle": "Reentrancy",
            "description": {
                "head": "persistent state write after call",
                "tail": "The persistent state (storage or balance) of a contract was accessed after a call to an external contract. To prevent reentrancy issues, make sure the callee is trusted or access the persistent state before the call."
            },
            "severity": "High",
            "locations": [{
                "sourceMap": "595:1:0",
                "sourceType": "raw-bytecode",
                "sourceFormat": "evm-byzantium-bytecode",
                "sourceList": ["0x208e4c8ea2a14bffdcba858f83a90208a0d04d31f35be35e94499c55c2852544"]
            }, {
                "sourceMap": "633:25:0",
                "sourceType": "solidity-file",
                "sourceFormat": "text",
                "sourceList": ["testset/generate.sol"]
            }],
            "extra": {
                "discoveryTime": 4051074343,
                "testCases": [{
                    "initialState": {
                        "accounts": {
                            "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0": {
                                "nonce": 0,
                                "balance": "0x00000000000000000000000000000000000000ffffffffffffffffffffffffff",
                                "code": "",
                                "storage": {}
                            },
                            "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1": {
                                "nonce": 1,
                                "balance": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                "code": "",
                                "storage": {}
                            },
                            "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2": {
                                "nonce": 1,
                                "balance": "0x00000000000000000000000000000000000000ffffffffffffffffffffffffff",
                                "code": "",
                                "storage": {}
                            },
                            "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3": {
                                "nonce": 1,
                                "balance": "0x00000000000000000000000000000000000000ffffffffffffffffffffffffff",
                                "code": "0x00",
                                "storage": {}
                            },
                            "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4": {
                                "nonce": 1,
                                "balance": "0x00000000000000000000000000000000000000ffffffffffffffffffffffffff",
                                "code": "0xfd",
                                "storage": {}
                            },
                            "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5": {
                                "nonce": 1,
                                "balance": "0x00000000000000000000000000000000000000ffffffffffffffffffffffffff",
                                "code": "0x608060405260005600a165627a7a72305820466f8a1bdae15c60b8e998fe04836ef505803cfbd8edd29bd4679531357576530029",
                                "storage": {}
                            },
                            "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6": {
                                "nonce": 1,
                                "balance": "0x00000000000000000000000000000000000000ffffffffffffffffffffffffff",
                                "code": "0x608060405273aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63081146038578073ffffffffffffffffffffffffffffffffffffffff16ff5b5000fea165627a7a723058205e8b906b72ad42c69b05acf4542283b6080ae82562bc74baac467daac2fb0e0e0029",
                                "storage": {}
                            },
                            "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                                "nonce": 0,
                                "balance": "0x0000000000000000000000000000000000ffffffffffffffffffffffffffffff",
                                "code": "",
                                "storage": {}
                            }
                        }
                    },
                    "steps": [{
                        "address": "",
                        "gasLimit": "0xffffff",
                        "gasPrice": "0x773594000",
                        "input": "0x60806040526001600a426040518082815260200191505060405180910390206001900481151561002b57fe5b060160015534801561003c57600080fd5b506102ab8061004c6000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680635ec01e4d146100675780635fd8c7101461009257806370a08231146100a9578063c533913214610100575b600080fd5b34801561007357600080fd5b5061007c61012b565b6040518082815260200191505060405180910390f35b34801561009e57600080fd5b506100a7610131565b005b3480156100b557600080fd5b506100ea600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610261565b6040518082815260200191505060405180910390f35b34801561010c57600080fd5b50610115610279565b6040518082815260200191505060405180910390f35b60015481565b6000806000338360000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060088360010181905550600a60015411151561025c576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491503373ffffffffffffffffffffffffffffffffffffffff168260405180602001905060006040518083038185875af192505050905080151561021057600080fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550426002819055505b505050565b60006020528060005260406000206000915090505481565b600254815600a165627a7a723058207661deca3298c10ed86f9cdb5ef9600969191fd936b234dbe5f9badce2bf8b5a0029",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0",
                        "blockCoinbase": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0",
                        "blockDifficulty": "0xa7d7343662e26",
                        "blockGasLimit": "0xffffff",
                        "blockNumber": "0x661a55",
                        "blockTime": "0x5be99aa8"
                    }, {
                        "address": "0x0901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "gasLimit": "0x7d000",
                        "gasPrice": "0x773594000",
                        "input": "0x5fd8c710000000000000000000000000000000",
                        "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0",
                        "value": "0x0",
                        "blockCoinbase": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0",
                        "blockDifficulty": "0xa7d7343662e26",
                        "blockGasLimit": "0x7d0000",
                        "blockNumber": "0x661a55",
                        "blockTime": "0x5be99aa8",
                        "decodedInput": "withdrawBalance()",
                        "name": "withdrawBalance()"
                    }]
                }],
                "toolName": "harvey"
            },
            "decodedLocations": [
                [{
                    "line": 22,
                    "column": 152
                }, {
                    "line": 22,
                    "column": 153
                }, false],
                [{
                    "line": 24,
                    "column": 8
                }, {
                    "line": 24,
                    "column": 33
                }, false]
            ]
        }, {
            "swcID": "SWC-107",
            "swcTitle": "Reentrancy",
            "description": {
                "head": "persistent state write after call",
                "tail": "The persistent state (storage or balance) of a contract was accessed after a call to an external contract. To prevent reentrancy issues, make sure the callee is trusted or access the persistent state before the call."
            },
            "severity": "High",
            "locations": [{
                "sourceMap": "602:1:0",
                "sourceType": "raw-bytecode",
                "sourceFormat": "evm-byzantium-bytecode",
                "sourceList": ["0x208e4c8ea2a14bffdcba858f83a90208a0d04d31f35be35e94499c55c2852544"]
            }, {
                "sourceMap": "668:16:0",
                "sourceType": "solidity-file",
                "sourceFormat": "text",
                "sourceList": ["testset/generate.sol"]
            }],
            "extra": {
                "discoveryTime": 4051074343,
                "testCases": [{
                    "initialState": {
                        "accounts": {
                            "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0": {
                                "nonce": 0,
                                "balance": "0x00000000000000000000000000000000000000ffffffffffffffffffffffffff",
                                "code": "",
                                "storage": {}
                            },
                            "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1": {
                                "nonce": 1,
                                "balance": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                "code": "",
                                "storage": {}
                            },
                            "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2": {
                                "nonce": 1,
                                "balance": "0x00000000000000000000000000000000000000ffffffffffffffffffffffffff",
                                "code": "",
                                "storage": {}
                            },
                            "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3": {
                                "nonce": 1,
                                "balance": "0x00000000000000000000000000000000000000ffffffffffffffffffffffffff",
                                "code": "0x00",
                                "storage": {}
                            },
                            "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa4": {
                                "nonce": 1,
                                "balance": "0x00000000000000000000000000000000000000ffffffffffffffffffffffffff",
                                "code": "0xfd",
                                "storage": {}
                            },
                            "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5": {
                                "nonce": 1,
                                "balance": "0x00000000000000000000000000000000000000ffffffffffffffffffffffffff",
                                "code": "0x608060405260005600a165627a7a72305820466f8a1bdae15c60b8e998fe04836ef505803cfbd8edd29bd4679531357576530029",
                                "storage": {}
                            },
                            "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6": {
                                "nonce": 1,
                                "balance": "0x00000000000000000000000000000000000000ffffffffffffffffffffffffff",
                                "code": "0x608060405273aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63081146038578073ffffffffffffffffffffffffffffffffffffffff16ff5b5000fea165627a7a723058205e8b906b72ad42c69b05acf4542283b6080ae82562bc74baac467daac2fb0e0e0029",
                                "storage": {}
                            },
                            "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                                "nonce": 0,
                                "balance": "0x0000000000000000000000000000000000ffffffffffffffffffffffffffffff",
                                "code": "",
                                "storage": {}
                            }
                        }
                    },
                    "steps": [{
                        "address": "",
                        "gasLimit": "0xffffff",
                        "gasPrice": "0x773594000",
                        "input": "0x60806040526001600a426040518082815260200191505060405180910390206001900481151561002b57fe5b060160015534801561003c57600080fd5b506102ab8061004c6000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680635ec01e4d146100675780635fd8c7101461009257806370a08231146100a9578063c533913214610100575b600080fd5b34801561007357600080fd5b5061007c61012b565b6040518082815260200191505060405180910390f35b34801561009e57600080fd5b506100a7610131565b005b3480156100b557600080fd5b506100ea600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610261565b6040518082815260200191505060405180910390f35b34801561010c57600080fd5b50610115610279565b6040518082815260200191505060405180910390f35b60015481565b6000806000338360000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060088360010181905550600a60015411151561025c576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491503373ffffffffffffffffffffffffffffffffffffffff168260405180602001905060006040518083038185875af192505050905080151561021057600080fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550426002819055505b505050565b60006020528060005260406000206000915090505481565b600254815600a165627a7a723058207661deca3298c10ed86f9cdb5ef9600969191fd936b234dbe5f9badce2bf8b5a0029",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0",
                        "blockCoinbase": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0",
                        "blockDifficulty": "0xa7d7343662e26",
                        "blockGasLimit": "0xffffff",
                        "blockNumber": "0x661a55",
                        "blockTime": "0x5be99aa8"
                    }, {
                        "address": "0x0901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "gasLimit": "0x7d000",
                        "gasPrice": "0x773594000",
                        "input": "0x5fd8c710000000000000000000000000000000",
                        "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0",
                        "value": "0x0",
                        "blockCoinbase": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0",
                        "blockDifficulty": "0xa7d7343662e26",
                        "blockGasLimit": "0x7d0000",
                        "blockNumber": "0x661a55",
                        "blockTime": "0x5be99aa8",
                        "decodedInput": "withdrawBalance()",
                        "name": "withdrawBalance()"
                    }]
                }],
                "toolName": "harvey"
            },
            "decodedLocations": [
                [{
                    "line": 23,
                    "column": 3
                }, {
                    "line": 23,
                    "column": 4
                }, false],
                [{
                    "line": 25,
                    "column": 8
                }, {
                    "line": 25,
                    "column": 24
                }, false]
            ]
        }, {
            "swcID": "SWC-131",
            "swcTitle": "Presence of unused variables",
            "description": {
                "head": "Unused local variable \"guessHistory\"",
                "tail": "The local variable \"guessHistory\" is created within the contract \"reentrancy\" but does not seem to be used anywhere. "
            },
            "severity": "Medium",
            "locations": [{
                "sourceMap": "281:25:0",
                "sourceType": "solidity-file",
                "sourceFormat": "text",
                "sourceList": ["testset/generate.sol"]
            }],
            "extra": {
                "discoveryTime": 604400592,
                "toolName": "maru"
            },
            "decodedLocations": [
                [{
                    "line": 17,
                    "column": 4
                }, {
                    "line": 17,
                    "column": 29
                }, false]
            ]
        }, {
            "swcID": "SWC-131",
            "swcTitle": "Presence of unused variables",
            "description": {
                "head": "Unused local variable \"guessHistory\"",
                "tail": "The local variable \"guessHistory\" is created within the contract \"reentrancy\" but does not seem to be used anywhere. "
            },
            "severity": "Medium",
            "locations": [{
                "sourceMap": "309:12:0",
                "sourceType": "solidity-file",
                "sourceFormat": "text",
                "sourceList": ["testset/generate.sol"]
            }],
            "extra": {
                "discoveryTime": 604415892,
                "toolName": "maru"
            },
            "decodedLocations": [
                [{
                    "line": 18,
                    "column": 0
                }, {
                    "line": 18,
                    "column": 12
                }, false]
            ]
        }, {
            "swcID": "SWC-131",
            "swcTitle": "Presence of unused variables",
            "description": {
                "head": "Unused local variable \"guessHistory\"",
                "tail": "The local variable \"guessHistory\" is created within the contract \"reentrancy\" but does not seem to be used anywhere. "
            },
            "severity": "Medium",
            "locations": [{
                "sourceMap": "344:12:0",
                "sourceType": "solidity-file",
                "sourceFormat": "text",
                "sourceList": ["testset/generate.sol"]
            }],
            "extra": {
                "discoveryTime": 604422592,
                "toolName": "maru"
            },
            "decodedLocations": [
                [{
                    "line": 19,
                    "column": 0
                }, {
                    "line": 19,
                    "column": 12
                }, false]
            ]
        }, {
            "swcID": "SWC-103",
            "swcTitle": "Floating Pragma",
            "description": {
                "head": "A floating pragma is set.",
                "tail": "It is recommended to make a conscious choice on what version of Solidity is used for compilation. Currently multiple versions \"^0.4.24\" are allowed."
            },
            "severity": "Low",
            "locations": [{
                "sourceMap": "0:24:0",
                "sourceType": "solidity-file",
                "sourceFormat": "text",
                "sourceList": ["testset/generate.sol"]
            }],
            "extra": {
                "discoveryTime": 593204840,
                "toolName": "maru"
            },
            "decodedLocations": [
                [{
                    "line": 1,
                    "column": 0
                }, {
                    "line": 1,
                    "column": 24
                }, false]
            ]
        }, {
            "swcID": "SWC-109",
            "swcTitle": "Uninitialized Storage Pointer",
            "description": {
                "head": "Dangerous use of uninitialized storage variables.",
                "tail": "Uninitialized storage variables of user-defined type can point to unexpected storage locations. Initialize variable \"guessHistory\" or set the storage attribute \"memory\"."
            },
            "severity": "Low",
            "locations": [{
                "sourceMap": "281:25:0",
                "sourceType": "solidity-file",
                "sourceFormat": "text",
                "sourceList": ["testset/generate.sol"]
            }],
            "extra": {
                "discoveryTime": 595684450,
                "toolName": "maru"
            },
            "decodedLocations": [
                [{
                    "line": 17,
                    "column": 4
                }, {
                    "line": 17,
                    "column": 29
                }, false]
            ]
        }, {
            "swcID": "",
            "swcTitle": "",
            "description": {
                "head": "You are running MythX in free mode. Analysis depth is limited in this mode so some issues might not be detected. Upgrade to a Dev or Pro plan to unlock in-depth analysis and higher rate limits. https://mythx.io/plans",
                "tail": "Warning: Free mode only detects certain types of smart contract vulnerabilities. Your contract may still be unsafe. Upgrade to a Dev or Pro plan to unlock the ability to test for even more vulnerabilities, perform deeper security analysis, and more. https://mythx.io/plans"
            },
            "severity": "Low",
            "locations": [],
            "extra": {}
        }],
        "sourceType": "solidity-file",
        "sourceFormat": "text",
        "sourceList": ["testset/generate.sol"],
        "meta": {
            "selectedCompiler": "Unknown",
            "logs": [],
            "toolName": "maru",
            "harveyCoveredPaths": 12,
            "harveyCoveredInstructions": 345,
            "harveyResidualRiskEstimate": 0
        }
    }]
]